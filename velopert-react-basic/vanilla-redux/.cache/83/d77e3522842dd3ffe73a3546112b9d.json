{"id":"index.html","dependencies":[{"name":"./index.css","dynamic":true,"resolved":"C:\\Users\\pyeon\\Desktop\\exercise\\react\\velopert-react-basic\\vanilla-redux\\index.css","parent":"C:\\Users\\pyeon\\Desktop\\exercise\\react\\velopert-react-basic\\vanilla-redux\\index.html"},{"name":"C:\\Users\\pyeon\\Desktop\\exercise\\react\\velopert-react-basic\\vanilla-redux\\package.json","includedInParent":true,"mtime":1650523251469}],"generated":{"html":"<!DOCTYPE html>\r\n<html>\r\n    <head>\r\n        <title>Redux basic example</title>\r\n        <link rel=\"stylesheet\" href=\"/bca1542f88ef8253c16b452e9ad09f98.css\">\r\n        <script src=\"https://unpkg.com/redux@latest/dist/redux.min.js\"></script>\r\n    </head>\r\n    <body>\r\n        <div class=\"toggle\"></div>\r\n        <hr>\r\n        <h1>0</h1>\r\n        <button id=\"increase\">+1</button>\r\n        <button id=\"decrease\">-1</button>\r\n        <script>function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar divToggle = document.querySelector('.toggle');\nvar counter = document.querySelector('h1');\nvar btnIncrease = document.querySelector('#increase');\nvar btnDecrease = document.querySelector('#decrease');\nvar TOGGLE_SWITCH = 'TOGGLE_SWITCH';\nvar INCREASE = 'INCREASE';\nvar DECREASE = 'DECREASE';\nvar initialState = {\n  toggle: false,\n  counter: 0\n};\n\nfunction reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case TOGGLE_SWITCH:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        toggle: !state.toggle\n      });\n\n    case INCREASE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        counter: state.counter + 1\n      });\n\n    case DECREASE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        counter: state.counter - 1\n      });\n\n    default:\n      return state;\n  }\n}\n\nvar store = Redux.createStore(reducer);\n\nfunction render() {\n  var state = store.getState(); // 현재 상태를 불러옴\n  // 토글 처리\n\n  if (state.toggle) {\n    divToggle.classList.add('active');\n  } else {\n    divToggle.classList.remove('active');\n  } // 카운터 처리\n\n\n  counter.innerHTML = state.counter;\n}\n\nrender();\nstore.subscribe(render);\ndivToggle.addEventListener('click', function () {\n  store.dispatch({\n    type: TOGGLE_SWITCH\n  });\n});\nbtnIncrease.addEventListener('click', function () {\n  store.dispatch({\n    type: INCREASE\n  });\n});\nbtnDecrease.addEventListener('click', function () {\n  store.dispatch({\n    type: DECREASE\n  });\n});</script>\r\n    </body>\r\n</html>\r\n"},"sourceMaps":null,"error":null,"hash":"5b0b0997262e5cac694bc27dafd7dac9","cacheData":{"env":{}}}